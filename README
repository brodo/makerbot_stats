INSTALLATION
############

Man braucht node.js, socat, die XCode command line tools und folgende npm-Module:

* cli-color
* commander
* serialport
* coffee-script

KONFIGURATION
#############

## 1. Schalter

a) Herausfinden an welchem Terminal der Schlater hÃ¤ngt:

* $ ./serialport.sh 
* Schalter an USB anschliessen
* Enter

b) REST-Server Starten

* $./switch.coffee terminal-pfad 


## 2. Makerbot

a) Sniffer Einstellungen 

* Mittels Makerware aktuell verwendetes Terminal ermitteln. (idr. /dev/tty.usb.....)
* Terminal auf /dev/tty.master umstellen




d) Terminal Sniffer einschalten und mit dem ehemals bei Makerware eingestellen Port,
sowie auf /dev/tty.slave verbinden. Output in pipe umleiten

* ./sniffer.coffee -p 3000 /dev/tty.slave /dev/tty.usb > /tmp/makerbot




1. Per VLC einen UDP-Stream der Kamera erstellen. Stream in h264 encodieren.
  File -> Advanced open file -> Capture -> Streaming/Saving 
3. Kamera Video per ffmpeg transkodieren und dann per mediastreamsegmenter segmentieren
  Im stream-verzeichnis:
  ffmpeg  -analyzeduration 10000000  -i udp://localhost:1234 -probesize 9999 -acodec libmp3lame -ac 1 -vcodec libx264 -s 640x480 -level 30 -f mpegts - | mediastreamsegmenter -b http://localhost/stream



/Applications/VLC.app/Contents/MacOS/VLC qtcapture://0x2440000005ac8507 --sout "#standard{access=file,mux=avi,dst=/tmp/camera.avi}"

/Applications/VLC.app/Contents/MacOS/VLC --ttl 12 qtcapture:// --sout="#transcode{venc=x264{keyint=60,idrint=2},vcodec=h264,vb=1024,acodec=mp4a,ab=32,channels=2, samplerate=22050}:duplicate{dst=file{mux=ts,dst='-'},dst=display}" | mediastreamsegmenter -s 10 -D -b http://localhost:8000/stream -i camera.m3u8


socat -x -v PTY,link=/dev/cu.test PTY,link=/dev/tty.test

mknod /dev/tty.usbserial-Monitor c 4 4
mknod /dev/cu.usbserial-Monitor c 5 5
chmod u+rw /dev/tty.usbserial-Monitor
chmod u+rw /dev/cu.usbserial-Monitor 